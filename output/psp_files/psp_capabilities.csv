PodSecurityPolicy;allowPrivilegeEscalation;allowedCapabilities;fsGroup;hostIPC;hostNetwork;hostPID;hostPorts;privileged;requiredDropCapabilities;runAsUser;seLinux;supplementalGroups;volumes
calico-kube-controllers;False;None;{'ranges': [{'max': 65535, 'min': 1}], 'rule': 'MustRunAs'};None;None;None;[{'max': 65535, 'min': 0}];None;['ALL'];{'rule': 'MustRunAsNonRoot'};{'rule': 'RunAsAny'};{'ranges': [{'max': 65535, 'min': 1}], 'rule': 'MustRunAs'};['configMap', 'emptyDir', 'projected', 'secret', 'downwardAPI', 'persistentVolumeClaim']
calico-node;True;None;{'ranges': [{'max': 65535, 'min': 1}], 'rule': 'MustRunAs'};None;True;None;[{'max': 65535, 'min': 0}];True;['ALL'];{'rule': 'RunAsAny'};{'rule': 'RunAsAny'};{'ranges': [{'max': 65535, 'min': 1}], 'rule': 'MustRunAs'};['configMap', 'emptyDir', 'projected', 'secret', 'downwardAPI', 'persistentVolumeClaim', 'hostPath']
calico-typha;False;None;{'ranges': [{'max': 65535, 'min': 1}], 'rule': 'MustRunAs'};None;True;None;[{'max': 65535, 'min': 0}];None;['ALL'];{'rule': 'MustRunAsNonRoot'};{'rule': 'RunAsAny'};{'ranges': [{'max': 65535, 'min': 1}], 'rule': 'MustRunAs'};['configMap', 'emptyDir', 'projected', 'secret', 'downwardAPI', 'persistentVolumeClaim']
permissive-psp;True;['*'];{'rule': 'RunAsAny'};True;True;True;[{'max': 65535, 'min': 0}];True;None;{'rule': 'RunAsAny'};{'rule': 'RunAsAny'};{'rule': 'RunAsAny'};['*']
restrictive-psp;False;None;{'ranges': [{'max': 65535, 'min': 1}], 'rule': 'MustRunAs'};None;None;None;[{'max': 65535, 'min': 0}];None;['ALL'];{'rule': 'MustRunAsNonRoot'};{'rule': 'RunAsAny'};{'ranges': [{'max': 65535, 'min': 1}], 'rule': 'MustRunAs'};['configMap', 'emptyDir', 'projected', 'secret', 'downwardAPI', 'persistentVolumeClaim']
tigera-operator;False;None;{'ranges': [{'max': 65535, 'min': 1}], 'rule': 'MustRunAs'};None;True;None;[{'max': 65535, 'min': 0}];None;['ALL'];{'rule': 'MustRunAsNonRoot'};{'rule': 'RunAsAny'};{'ranges': [{'max': 65535, 'min': 1}], 'rule': 'MustRunAs'};['hostPath', 'configMap', 'emptyDir', 'projected', 'secret', 'downwardAPI', 'persistentVolumeClaim']
